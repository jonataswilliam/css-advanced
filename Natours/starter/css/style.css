@charset "UTF-8";
/*Resetando padroes dos browsers*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

/*Definindo o tamanho da fonte de acordo com a fonte padrao do browser, que é 16px. Ao coloocarmos 62.5% definimos que queremos nosso fonte como 10px.*/
html {
  font-size: 62.5%; }

/*Fonts sempre são definidas no body por boas práticas*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.header {
  /*xVH é x do valor total da Viewport */
  height: 95vh;
  /*Para criar o efeito de gradiente sobre uma imagem basta colocar um linear-gradient e a img separadas por ",". A img que ficará por cima sempre virá primeiro*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  /*background-size= cover faz com que a imagem se adapte ao tamanho da janela*/
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
  /*@keyframes moveLogo {*/
  /*    0% {*/
  /*        transform: translateX(1000px);*/
  /*        opacity: 0;*/
  /*    }*/
  /*    100% {*/
  /*        transform: translateX(0);*/
  /*        opacity: 1;*/
  /*    }*/
  /*}*/ }
  .header__logo--box {
    top: 4.5rem;
    left: 4.5rem;
    /*Position Absolute pega a posição de referencia do primeiro pai com Position Relative*/
    position: absolute; }
  .header__logo {
    /*Quando definimos a altura de uma imagem a largura já é definida automaticamente. Ou vice-versa.*/
    height: 3rem;
    /*animation: moveLogo 1s ease-out;*/ }
  .header__text--box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*Serve para consertar bug de tremor na animaçao. O real sentido dessa propriedade é esconder a parte de tras do elemento, que pode ser util quando rotacionamos para ver.*/
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /*Invocando a animacao*/
    animation-name: moveInLeft;
    animation-duration: 1s;
    /*Define o estilo da animação. Por exemplo, se começara mais rapido e terminará lento, etc.*/
    animation-timing-function: ease-out;
    /*
        --Quantas vezes a animação será reproduzida
        animation-iteration-count: 3;
        --Quanto tempo para iniciar a animação
        animation-delay: 3s;
        */ }
  .heading-primary--sub {
    display: block;
    font-weight: 700;
    font-size: 2rem;
    letter-spacing: 1.75rem;
    /*Invocando animação de forma resumida*/
    animation: moveInRight 1s ease-out; }

/*Criando uma animação com keyframes*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.btn {
  /*Ação de clique*/
  /*Criando um botão "virtual" que iremos usar ele para fazer alguns efeitos*/ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative; }
  .btn:hover {
    /*No CSS é padrão que os elementos sejam movidos de cima para baixo. Portanto quando queremos mover de baixo para cima os valores são negativos.*/
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.5) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    /*Colocando atras do botao principal*/
    z-index: -1;
    transition: all .25s; }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    /*Com backwards Aplica os valores que estarão em 0% da animação no elemento*/
    animation-fill-mode: backwards; }
